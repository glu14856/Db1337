//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBClient
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities2 : DbContext
    {
        public Entities2()
            : base("name=Entities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AktBenutzer> AktBenutzers { get; set; }
        public virtual DbSet<DiplBen> DiplBens { get; set; }
        public virtual DbSet<Diplomprojekte> Diplomprojektes { get; set; }
        public virtual DbSet<InfoAbteilungen> InfoAbteilungens { get; set; }
        public virtual DbSet<Infobenutzer> Infobenutzers { get; set; }
        public virtual DbSet<InfoDiplomprojekte> InfoDiplomprojektes { get; set; }
        public virtual DbSet<InfoDiplomschritte> InfoDiplomschrittes { get; set; }
    
        [DbFunction("Entities2", "DelimitedSplit8K")]
        public virtual IQueryable<DelimitedSplit8K_Result> DelimitedSplit8K(string pString, string pDelimiter)
        {
            var pStringParameter = pString != null ?
                new ObjectParameter("pString", pString) :
                new ObjectParameter("pString", typeof(string));
    
            var pDelimiterParameter = pDelimiter != null ?
                new ObjectParameter("pDelimiter", pDelimiter) :
                new ObjectParameter("pDelimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DelimitedSplit8K_Result>("[Entities2].[DelimitedSplit8K](@pString, @pDelimiter)", pStringParameter, pDelimiterParameter);
        }
    
        [DbFunction("Entities2", "GetNums")]
        public virtual IQueryable<GetNums_Result> GetNums(Nullable<long> n)
        {
            var nParameter = n.HasValue ?
                new ObjectParameter("n", n) :
                new ObjectParameter("n", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetNums_Result>("[Entities2].[GetNums](@n)", nParameter);
        }
    
        public virtual ObjectResult<string> benutzeraccverify(string benutzer, string passwd)
        {
            var benutzerParameter = benutzer != null ?
                new ObjectParameter("benutzer", benutzer) :
                new ObjectParameter("benutzer", typeof(string));
    
            var passwdParameter = passwd != null ?
                new ObjectParameter("passwd", passwd) :
                new ObjectParameter("passwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("benutzeraccverify", benutzerParameter, passwdParameter);
        }
    
        public virtual ObjectResult<string> benutzerlogin(string benutzer, Nullable<bool> additiv)
        {
            var benutzerParameter = benutzer != null ?
                new ObjectParameter("benutzer", benutzer) :
                new ObjectParameter("benutzer", typeof(string));
    
            var additivParameter = additiv.HasValue ?
                new ObjectParameter("additiv", additiv) :
                new ObjectParameter("additiv", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("benutzerlogin", benutzerParameter, additivParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> benutzerlogout(string benutzer, string session)
        {
            var benutzerParameter = benutzer != null ?
                new ObjectParameter("benutzer", benutzer) :
                new ObjectParameter("benutzer", typeof(string));
    
            var sessionParameter = session != null ?
                new ObjectParameter("session", session) :
                new ObjectParameter("session", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("benutzerlogout", benutzerParameter, sessionParameter);
        }
    
        public virtual ObjectResult<DiplomprojektInsert_Result> DiplomprojektInsert(Nullable<int> di_Abteilung, string di_Ausbildungsschwerpunkt, string di_Titel, string di_Untertitel, string di_Aufgabenstellung, string di_Zielsetzung, string di_geplantes_Ergebnis, string di_Meilenstein, string di_Rechtliche_Regelung, string di_Praesentationsname, string di_Titel_Englisch, string di_Zusammenfassung, string di_Zusammenfassung_Englisch, string di_Typ, string di_Stichwoerter, string di_Stichwoerter_Englisch, string di_Link_Projektseite, string di_Umfeld, Nullable<bool> di_Sperrvermerk, Nullable<int> di_Schule, Nullable<int> schuelerhauptverantwortlich)
        {
            var di_AbteilungParameter = di_Abteilung.HasValue ?
                new ObjectParameter("Di_Abteilung", di_Abteilung) :
                new ObjectParameter("Di_Abteilung", typeof(int));
    
            var di_AusbildungsschwerpunktParameter = di_Ausbildungsschwerpunkt != null ?
                new ObjectParameter("Di_Ausbildungsschwerpunkt", di_Ausbildungsschwerpunkt) :
                new ObjectParameter("Di_Ausbildungsschwerpunkt", typeof(string));
    
            var di_TitelParameter = di_Titel != null ?
                new ObjectParameter("Di_Titel", di_Titel) :
                new ObjectParameter("Di_Titel", typeof(string));
    
            var di_UntertitelParameter = di_Untertitel != null ?
                new ObjectParameter("Di_Untertitel", di_Untertitel) :
                new ObjectParameter("Di_Untertitel", typeof(string));
    
            var di_AufgabenstellungParameter = di_Aufgabenstellung != null ?
                new ObjectParameter("Di_Aufgabenstellung", di_Aufgabenstellung) :
                new ObjectParameter("Di_Aufgabenstellung", typeof(string));
    
            var di_ZielsetzungParameter = di_Zielsetzung != null ?
                new ObjectParameter("Di_Zielsetzung", di_Zielsetzung) :
                new ObjectParameter("Di_Zielsetzung", typeof(string));
    
            var di_geplantes_ErgebnisParameter = di_geplantes_Ergebnis != null ?
                new ObjectParameter("Di_geplantes_Ergebnis", di_geplantes_Ergebnis) :
                new ObjectParameter("Di_geplantes_Ergebnis", typeof(string));
    
            var di_MeilensteinParameter = di_Meilenstein != null ?
                new ObjectParameter("Di_Meilenstein", di_Meilenstein) :
                new ObjectParameter("Di_Meilenstein", typeof(string));
    
            var di_Rechtliche_RegelungParameter = di_Rechtliche_Regelung != null ?
                new ObjectParameter("Di_Rechtliche_Regelung", di_Rechtliche_Regelung) :
                new ObjectParameter("Di_Rechtliche_Regelung", typeof(string));
    
            var di_PraesentationsnameParameter = di_Praesentationsname != null ?
                new ObjectParameter("Di_Praesentationsname", di_Praesentationsname) :
                new ObjectParameter("Di_Praesentationsname", typeof(string));
    
            var di_Titel_EnglischParameter = di_Titel_Englisch != null ?
                new ObjectParameter("Di_Titel_Englisch", di_Titel_Englisch) :
                new ObjectParameter("Di_Titel_Englisch", typeof(string));
    
            var di_ZusammenfassungParameter = di_Zusammenfassung != null ?
                new ObjectParameter("Di_Zusammenfassung", di_Zusammenfassung) :
                new ObjectParameter("Di_Zusammenfassung", typeof(string));
    
            var di_Zusammenfassung_EnglischParameter = di_Zusammenfassung_Englisch != null ?
                new ObjectParameter("Di_Zusammenfassung_Englisch", di_Zusammenfassung_Englisch) :
                new ObjectParameter("Di_Zusammenfassung_Englisch", typeof(string));
    
            var di_TypParameter = di_Typ != null ?
                new ObjectParameter("Di_Typ", di_Typ) :
                new ObjectParameter("Di_Typ", typeof(string));
    
            var di_StichwoerterParameter = di_Stichwoerter != null ?
                new ObjectParameter("Di_Stichwoerter", di_Stichwoerter) :
                new ObjectParameter("Di_Stichwoerter", typeof(string));
    
            var di_Stichwoerter_EnglischParameter = di_Stichwoerter_Englisch != null ?
                new ObjectParameter("Di_Stichwoerter_Englisch", di_Stichwoerter_Englisch) :
                new ObjectParameter("Di_Stichwoerter_Englisch", typeof(string));
    
            var di_Link_ProjektseiteParameter = di_Link_Projektseite != null ?
                new ObjectParameter("Di_Link_Projektseite", di_Link_Projektseite) :
                new ObjectParameter("Di_Link_Projektseite", typeof(string));
    
            var di_UmfeldParameter = di_Umfeld != null ?
                new ObjectParameter("Di_Umfeld", di_Umfeld) :
                new ObjectParameter("Di_Umfeld", typeof(string));
    
            var di_SperrvermerkParameter = di_Sperrvermerk.HasValue ?
                new ObjectParameter("Di_Sperrvermerk", di_Sperrvermerk) :
                new ObjectParameter("Di_Sperrvermerk", typeof(bool));
    
            var di_SchuleParameter = di_Schule.HasValue ?
                new ObjectParameter("Di_Schule", di_Schule) :
                new ObjectParameter("Di_Schule", typeof(int));
    
            var schuelerhauptverantwortlichParameter = schuelerhauptverantwortlich.HasValue ?
                new ObjectParameter("schuelerhauptverantwortlich", schuelerhauptverantwortlich) :
                new ObjectParameter("schuelerhauptverantwortlich", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiplomprojektInsert_Result>("DiplomprojektInsert", di_AbteilungParameter, di_AusbildungsschwerpunktParameter, di_TitelParameter, di_UntertitelParameter, di_AufgabenstellungParameter, di_ZielsetzungParameter, di_geplantes_ErgebnisParameter, di_MeilensteinParameter, di_Rechtliche_RegelungParameter, di_PraesentationsnameParameter, di_Titel_EnglischParameter, di_ZusammenfassungParameter, di_Zusammenfassung_EnglischParameter, di_TypParameter, di_StichwoerterParameter, di_Stichwoerter_EnglischParameter, di_Link_ProjektseiteParameter, di_UmfeldParameter, di_SperrvermerkParameter, di_SchuleParameter, schuelerhauptverantwortlichParameter);
        }
    
        public virtual ObjectResult<string> Diplschritthoch(Nullable<int> diid, string kommentar)
        {
            var diidParameter = diid.HasValue ?
                new ObjectParameter("diid", diid) :
                new ObjectParameter("diid", typeof(int));
    
            var kommentarParameter = kommentar != null ?
                new ObjectParameter("kommentar", kommentar) :
                new ObjectParameter("kommentar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Diplschritthoch", diidParameter, kommentarParameter);
        }
    
        public virtual ObjectResult<string> Diplschrittrunter(Nullable<int> diid, string kommentar, Nullable<int> selectedstep)
        {
            var diidParameter = diid.HasValue ?
                new ObjectParameter("diid", diid) :
                new ObjectParameter("diid", typeof(int));
    
            var kommentarParameter = kommentar != null ?
                new ObjectParameter("kommentar", kommentar) :
                new ObjectParameter("kommentar", typeof(string));
    
            var selectedstepParameter = selectedstep.HasValue ?
                new ObjectParameter("selectedstep", selectedstep) :
                new ObjectParameter("selectedstep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Diplschrittrunter", diidParameter, kommentarParameter, selectedstepParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
